разница между const и readonly 
	Константы должны быть определены во время компиляции, а поля для чтения могут быть определены во время 				выполнения программы.
	Соответственно инициализировать константу можно устанновить только при ее определении.
	Поле для чтения можно инициализировать либо при его определении, либо в конструкторе класса.
	Константы не могут использовать модификатор static, так как уже неявно являются статическими. Поля для 				чтения могут быть как статическими, так и не статическими.

virtual и override
deep и shallow
	Поверхностное копирование работает только для свойств, представляющих примитивные типы, но не для сложных 		объектов. И в этом случае надо применять глубокое копирование:
sealed
	нельзя наследовать
что за методы расширения 
 полиморфизм — это способность обьекта использовать методы производного класса, которые не существует на момент создания базового.
	Виды полиморфизма:

- статический (определяется во время компиляции). Перегрузка функций, методов, операторов и т.д.

- динамический (определяется во время выполнения). Содержит виртуальные функции и методы.


	В C# применяются следующие модификаторы доступа:

	public: публичный, общедоступный класс или член класса. Такой член класса доступен из любого места в коде, а также из других программ и сборок.

	private: закрытый класс или член класса. Представляет полную противоположность модификатору public. Такой закрытый класс или член класса доступен только из кода в том же классе или контексте.

	protected: такой член класса доступен из любого места в текущем классе или в производных классах. При этом производные классы могут располагаться в других сборках.

	internal: класс и члены класса с подобным модификатором доступны из любого места кода в той же сборке, однако он недоступен для других программ и сборок (как в случае с модификатором public).

	protected internal: совмещает функционал двух модификаторов. Классы и члены класса с таким модификатором доступны из текущей сборки и из производных классов.

	private protected: такой член класса доступен из любого места в текущем классе или в производных классах, которые определены в той же сборке.


	Сожержание интерфейса:

	Методы
	Свойства
	Индексаторы
	События