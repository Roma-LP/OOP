Git — мощная и сложная распределенная система контроля версий.

коммит, Commit (коммит) – сохранение состояния своего проекта в репозитарии Git.

ветка, branch Ветка в Git'е — это просто легковесный подвижный указатель на один из этих коммитов. Ветка по умолчанию в Git'е называется master. Когда вы создаёте коммиты на начальном этапе, вам дана ветка master, указывающая на последний сделанный коммит. При каждом новом коммите она сдвигается вперёд автоматически.

пул-реквест, pull request Пулл Реквест это что-то типа сообщения автору оригинального репозитория со смыслом "эй, я тут сделал крутую штуку, рекомендую добавить ее в такую-то ветку". Автор оригинальной репы смотрит на ваши "крутые штуки" и решает - сделать пулл или не сделать, вмерджить в ветку или нет.

хэш коммита, Механизм, которым пользуется Git при вычислении хеш-сумм, называется SHA-1 хеш. Это строка длинной в 40 шестнадцатеричных символов (0-9 и a-f), она вычисляется на основе содержимого файла или структуры каталога

форк, fork Вы сделали форк его репозитория (т.е. скопировали к себе).

дифф коммита (diff) - показывает изменения между коммитами, коммитом и рабочим деревом и т. д. Будете использовать эту команду для получения ответов на два вопроса: что вы изменили, но ещё не проиндексировали, и что вы проиндексировали и собираетесь фиксировать
 
статус изменений и список комитов  - git status

HEAD - 		Снимок последнего коммита,это указатель на текущую ветку кторая является указателем на последний коммит, сделанный в этой ветке
Индекс -	Снимок, это ваш следующий намеченный коммит “область подготовленных изменений”
Рабочий Каталог-Песочница

a.  git add 		добавим в репозиторий страницу «Hello, World»/добавить эти изменения в репозиторий
b.  git status 		чтобы проверить текущее состояние репозитория
c.  git commit 		коммит с месенджером -m "..."
d.  git clone 		выкачивает с ссылки репозиторий со всеми коммиатми и ветками 
e.  git pull / git push (git pull и git merge)
    git pull => git git fetch (получение изменений с сервера) и git merge (сливание в локальную копию)
f.  git fetch		(получение изменений с сервера) 
g.  git init 		создать git репозиторий из этого каталога
h.  git config 
9.  git checkout	для отмены изменений (изменение head или выбор указателя прохода по ветке)
10. git reset		можно снять индексацию этих изменений, если не хотите коммитить изменения
11. git log 		Получение списка произведенных изменений
12. git stash		скрывает все сделанные изменения и переводит код в состояние HEAD
13. git revert		отменить коммит (можно написать HEAD)
14. git branch 		создадим новую ветку (без аргументов, список имеющихся у вас веток)
15. git checkout -b primer  создаст новую ветку primer из текущей
16. git merge primer	сливает в ветку, в которой находишься ту которую указываешь 
17. gir rebase 
18. git remote add origin https://...   выгружает локальный репозиторий на удаленный по ссылке
    git push -u origin master		предварительно довавив колабораторс
19. git push 		просто выгружает комиты в удаленный